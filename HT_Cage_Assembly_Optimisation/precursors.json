{
    "Di1": "O=Cc1cccc(C=O)c1",
    "Di10": "O=Cc1ccccc1C=O",
    "Di11": "Cn1nc(-c2ccc(C=O)cc2)cc1C=O",
    "Di12": "CC(C=O)=Cc1ccc(C=C(C)C=O)cc1",
    "Di13": "COc1cc(C=O)ccc1OCCOc1ccc(C=O)cc1OC",
    "Di14": "Cn1nc2c(C=O)cccc2c1C=O",
    "Di15": "O=Cc1ccc(OCCCOc2ccc(C=O)cc2)cc1",
    "Di16": "CCCCC(CC)COc1cc(C=O)c(OC)cc1C=O",
    "Di17": "NCCN",
    "Di18": "CC(C)(CN)CN",
    "Di19": "N[C@H]1CN(Cc2ccccc2)C[C@@H]1N",
    "Di2": "CC(C)(C)c1cc(C=O)c(O)c(C=O)c1",
    "Di20": "N[C@H]([C@H](C1=CC=CC=C1)N)C2=CC=CC=C2",
    "Di21": "Nc1ccc(Oc2ccc(N)cc2)cc1",
    "Di22": "NC1=NON=C1N",
    "Di23": "N[C@H]1CCC[C@H](C1)N",
    "Di24": "N[C@@H]1[C@H](CCCC1)N",
    "Di25": "NCCCCCCNCCCCCCN",
    "Di26": "NCCCCCCN",
    "Di27": "NCc1ccc(CN)cc1",
    "Di28": "NCC1CCC(CN)CC1",
    "Di29": "CN(CCCN)CCCN",
    "Di3": "O=Cc1cc2sc(C=O)cc2s1",
    "Di30": "NCCOCCN",
    "Di31": "NCC1=CC(CN)=CC=C1",
    "Di32": "NCC(CN)O",
    "Di33": "NCCCC[C@H](N)C(=O)O",
    "Di34": "N[C@H]1CC[C@H](N)CC1",
    "Di4": "O=Cc1ccc(C=O)cc1",
    "Di5": "O=Cc1c(F)c(F)c(C=O)c(F)c1F",
    "Di6": "O=Cc1ccc(-c2ccc(C=O)cc2)cc1",
    "Di7": "O=Cc1c2ccccc2c(C=O)c2ccccc12",
    "Di8": "O=Cc1ccc2ccc3ccc(C=O)nc3c2n1",
    "Di9": "O=Cc1ccsc1C=O",
    "TriA": "Nc1nc(N)nc(N)n1",
    "TriB": "Cc1c(CN)c(C)c(CN)c(C)c1CN",
    "TriC": "NCCN(CCN)CCN",
    "TriD": "CCc1c(CN)c(CC)c(CN)c(CC)c1CN",
    "TriE": "NCCCN(CCCN)CCCN",
    "TriF": "NC1CC(N)CC(N)C1",
    "TriG": "O=Cc1cc(C=O)cc(C=O)c1",
    "TriH": "O=Cc1ccc(-c2cc(-c3ccc(C=O)cc3)cc(-c3ccc(C=O)cc3)c2)cc1",
    "TriI": "O=Cc1cc(C=O)c(O)c(C=O)c1",
    "TriJ": "O=Cc1ccc(N(c2ccc(C=O)cc2)c2ccc(C=O)cc2)cc1",
    "TriK": "O=Cc1ccc(-c2nc(-c3ccc(C=O)cc3)nc(-c3ccc(C=O)cc3)n2)cc1",
    "TriL": "O=Cc1ccc(C#Cc2cc(C#Cc3ccc(C=O)cc3)cc(C#Cc3ccc(C=O)cc3)c2)cc1",
    "TriM": "O=Cc1cccc(-c2cc(-c3cccc(C=O)c3)cc(-c3cccc(C=O)c3)c2)c1",
    "TriN": "O=Cc1ccccc1-c1cc(-c2ccccc2C=O)cc(-c2ccccc2C=O)c1",
    "TriO": "O=Cc1cc(-c2cc(-c3csc(C=O)c3)cc(-c3csc(C=O)c3)c2)cs1",
    "TriP": "O=Cc1ccc(-c2cc(-c3ccc(C=O)o3)cc(-c3ccc(C=O)o3)c2)o1",
    "TriQ": "O=CC=Cc1ccc(-c2cc(-c3ccc(C=CC=O)cc3)cc(-c3ccc(C=CC=O)cc3)c2)cc1",
    "TriR": "O=Cc1ccc(OCc2cc(COc3ccc(C=O)cc3)cc(COc3ccc(C=O)cc3)c2)cc1",
    "TriS": "O=Cc1ccc(C#Cc2cc(C=O)cc(C=O)c2)cc1",
    "TriT": "O=Cc1c(O)c(C=O)c(O)c(C=O)c1O",
    "TriU": "O=Cc1ccc(C=Cc2cc(C=Cc3ccc(C=O)cc3)cc(C=Cc3ccc(C=O)cc3)c2)cc1"
}